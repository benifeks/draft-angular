import { Card } from '../deck.service';

import { calculateScore } from './score.utils';

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–π —Ä—É–∫–∏:
 * 2 –∫–∞—Ä—Ç—ã –∏–≥—Ä–æ–∫—É, 2 –¥–∏–ª–µ—Ä—É
 * –ü–æ–¥—Å—á—ë—Ç –æ—á–∫–æ–≤ –æ–±–µ–∏—Ö —Å—Ç–æ—Ä–æ–Ω
 */
export function initializeHands(cards: Card[]): {
  playerCards: Card[];
  dealerCards: Card[];
  playerScore: number;
  dealerScore: number;
  hideDealerScore: boolean;
} {
  if (cards.length < 4) {
    throw new Error(
      '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–∞—Ä—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–≥—Ä—ã (–Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 4)'
    );
  }

  const playerCards = cards.slice(0, 2);
  const dealerCards = cards.slice(2, 4);

  const playerScore = calculateScore(playerCards);
  const dealerScore = calculateScore(dealerCards);

  // üöÄ –õ–æ–≥–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å
  console.log('üé≤ –ò–≥—Ä–æ–∫ –ø–æ–ª—É—á–∏–ª –∫–∞—Ä—Ç—ã:', playerCards);
  console.log('üßÆ –û—á–∫–∏ –∏–≥—Ä–æ–∫–∞:', playerScore);

  console.log('üé≤ –î–∏–ª–µ—Ä –ø–æ–ª—É—á–∏–ª –∫–∞—Ä—Ç—ã:', dealerCards);
  console.log('üßÆ –û—á–∫–∏ –¥–∏–ª–µ—Ä–∞ (–æ–±–∞):', dealerScore);

  return {
    playerCards,
    dealerCards,
    playerScore,
    dealerScore,
    hideDealerScore: true, // —Å–∫—Ä—ã–≤–∞–µ–º –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
  };
}
