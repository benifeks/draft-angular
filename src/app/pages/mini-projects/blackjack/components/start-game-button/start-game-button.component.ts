import { CommonModule } from '@angular/common';
import { Component, inject } from '@angular/core';

import { DeckService } from '../../services/deck.service';
import { GameStateService } from '../../services/game-state.service';
import { initializeHands } from '../../utils/init.utils';

@Component({
  selector: 'app-start-game-button',
  imports: [CommonModule],
  templateUrl: './start-game-button.component.html',
  styleUrl: './start-game-button.component.scss',
})
export class StartGameButtonComponent {
  private readonly deckService = inject(DeckService);
  public readonly gameStateService = inject(GameStateService);

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–æ–≤—É—é –∏–≥—Ä—É:
   * - —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—É—é –∫–æ–ª–æ–¥—É
   * - –±–µ—Ä—ë—Ç 4 –∫–∞—Ä—Ç—ã
   * - —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–∞—Ä—Ç—ã –ø–æ —Ä—É–∫–∞–º
   * - —Å—á–∏—Ç–∞–µ—Ç –æ—á–∫–∏
   * - –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
   */
  public startGame(): void {
    this.deckService.newDeck().subscribe({
      next: (deckId) => {
        this.gameStateService.setDeckId(deckId);

        this.deckService.drawCards(deckId, 4).subscribe({
          next: (cards) => {
            try {
              // üõ†Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä—É–∫–∏ –∏ –æ—á–∫–∏
              const {
                playerCards,
                dealerCards,
                playerScore,
                dealerScore,
                //hideDealerScore,
              } = initializeHands(cards, this.gameStateService);

              // üß† –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
              this.gameStateService.setPlayerCards(playerCards);
              this.gameStateService.setDealerCards(dealerCards);
              this.gameStateService.setPlayerScore(playerScore);
              this.gameStateService.setDealerScore(dealerScore);

              // ‚ùî –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å hideDealerScore –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
              // this.gameStateService.setHideDealerScore(hideDealerScore);
            } catch (error) {
              console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç:', error);
            }
          },
          error: (err) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ç—è–≥–∏–≤–∞–Ω–∏–∏ –∫–∞—Ä—Ç:', err);
          },
        });
      },
      error: (err) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–ª–æ–¥—ã:', err);
      },
    });
  }
}
