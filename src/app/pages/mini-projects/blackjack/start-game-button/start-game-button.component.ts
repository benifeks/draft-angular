import { CommonModule } from '@angular/common';
import { Component, inject } from '@angular/core';

import { DeckService } from '../services/deck.service';
import { GameStateService } from '../services/game-state.service';
import { initializeHands } from '../services/utils/init.utils';

@Component({
  selector: 'app-start-game-button',
  imports: [CommonModule],
  templateUrl: './start-game-button.component.html',
  styleUrl: './start-game-button.component.scss',
})
export class StartGameButtonComponent {
  private readonly deckService = inject(DeckService);
  public readonly gameStateService = inject(GameStateService);

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–æ–≤—É—é –∏–≥—Ä—É:
   * - —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—É—é –∫–æ–ª–æ–¥—É
   * - –±–µ—Ä—ë—Ç 4 –∫–∞—Ä—Ç—ã
   * - —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–∞—Ä—Ç—ã –ø–æ —Ä—É–∫–∞–º
   * - —Å—á–∏—Ç–∞–µ—Ç –æ—á–∫–∏
   * - –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
   */
  public startGame(): void {
    this.deckService.newDeck().subscribe({
      next: (deckId) => {
        this.gameStateService.setDeckId(deckId);

        this.deckService.drawCards(deckId, 4).subscribe({
          next: (cards) => {
            try {
              const {
                playerCards,
                dealerCards,
                playerScore,
                dealerScore,
                hideDealerScore,
              } = initializeHands(cards);

              this.gameStateService.setPlayerCards(playerCards);
              this.gameStateService.setDealerCards(dealerCards);
              this.gameStateService.setPlayerScore(playerScore);
              this.gameStateService.setDealerScore(dealerScore);

              // (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) —Å–∫—Ä—ã—Ç–∏–µ –æ—á–∫–æ–≤ –¥–∏–ª–µ—Ä–∞ –º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å
              // this.gameStateService.setHideDealerScore(hideDealerScore);

              // üéØ —Å—é–¥–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å: —Å–º–µ–Ω–∞ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã, —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –∏ —Ç.–¥.
            } catch (error) {
              console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç:', error);
            }
          },
          error: (err) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ç—è–≥–∏–≤–∞–Ω–∏–∏ –∫–∞—Ä—Ç:', err);
          },
        });
      },
      error: (err) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–ª–æ–¥—ã:', err);
      },
    });
  }
}
