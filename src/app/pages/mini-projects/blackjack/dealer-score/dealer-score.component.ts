import { AsyncPipe } from '@angular/common';
import { Component, inject } from '@angular/core';
import { combineLatest, map } from 'rxjs';

import { GameStateService } from '../services/game-state.service';

@Component({
  selector: 'app-dealer-score',
  imports: [AsyncPipe],
  templateUrl: './dealer-score.component.html',
  styleUrl: './dealer-score.component.scss',
})
export class DealerScoreComponent {
  private readonly gameStateService = inject(GameStateService);

  // –û–±—ä–µ–¥–∏–Ω—è–µ–º  –æ—á–∫–∏ –¥–∏–ª–µ—Ä–∞ –∏ —Ñ–ª–∞–≥ —Å–∫—Ä—ã—Ç–∏—è –æ—á–∫–æ–≤
  public readonly displayedDealerScore$ = combineLatest([
    this.gameStateService.dealerScore$,
    this.gameStateService.hideDealerScore$, // —Ñ–ª–∞–≥ —Å–∫—Ä—ã—Ç–∏—è –æ—á–∫–æ–≤
  ]).pipe(
    map(([score, hideScore]) => {
      // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–∫—Ä—ã—Ç—å –æ—á–∫–∏ (–æ–±—ã—á–Ω–æ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ) ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–º–æ–¥–∑–∏
      if (hideScore) return 'ü§î';
      // –ò–Ω–∞—á–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—á–∫–∏ –¥–∏–ª–µ—Ä–∞ (—á–∏—Å–ª–æ)
      return score.toString();
    })
  );
}
